@using PartyGamesSystem.Web.Helpers
@using PartyGamesSystem.Web.ViewModels
@model PartyGameViewModel

<h4 class="text-center">@Model.Title.ToUpper()</h4>
<div class="panel-body">
    <div class="row">
        <div class="col-md-4 text-center">
            @if (Model.ImageId != null)
            {
                <img src="@Url.Action("Image", "Images", new { id = Model.ImageId.Value })" alt="@Model.Title image" class="img-responsive form-control-sm" />
            }
            else
            {
                <span class="form-control form-control-sm">No image</span>
            }
            <br />
            @if (User.Identity.IsAuthenticated)
            {
                if (Model.CurrentUserRating != null)
                {
                    <div>
                        <span class="pull-left">Rated</span>
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Model.CurrentUserRating.Value)
                            {
                                <label class="small-color-star filled"></label>
                            }
                            else
                            {
                                <label src="~/Content/Images/small-color_star.png" class="small-color-star"></label>
                            }
                        }
                    </div>
                    <br />
                    <div class="btn btn-common btn-xs showRating">
                        Rate it again
                    </div>
                }
                else
                {
                    <div class="btn btn-warning btn-xs showRating">
                        Rate this game
                    </div>
                }
                <br />
                <br />
                using (Ajax.BeginForm("Vote", "Ratings", new { gameId = Model.Id, ratingId = Model.CurrentUserRating == null ? -1 : Model.CurrentUserRating.Id },
                            new AjaxOptions
                            {
                                UpdateTargetId = "game-section-" + Model.Id
                            },
                            new { id = "form-" + Model.Id, @class = "rating-panel" }))
                {
                    <div class="rating-area">
                        <label class="rating-star"></label>
                        <input type="radio" name="rating" value="1">
                        <label class="rating-star"></label>
                        <input type="radio" name="rating" value="2">
                        <label class="rating-star"></label>
                        <input type="radio" name="rating" value="3">
                        <label class="rating-star"></label>
                        <input type="radio" name="rating" value="4">
                        <label class="rating-star"></label>
                        <input type="radio" name="rating" value="5">
                    </div>
                    <div class="btn btn-xs btn-default pull-left btn-clear-rating">Clear</div>
                    <input type="submit" value="Rate" class="btn btn-xs btn-success pull-right submit-rating" />
                    <br />
                    <br />
                }
            }

        </div>
        <div class="col-md-7 col-md-offset-1">
            <p class="description text-justify">@Html.ShowDescription(Model)</p>
            <h4>Category :: <span class="nice-green">@(Model.CategoryName == string.Empty ? "None" : Model.CategoryName)</span></h4>
            <div class="row">
                <div class="col-md-5">
                    <b>Suitable for :: </b><span>@Html.ShowPlayingPeopleInfo(Model)</span>
                </div>
                <div class="col-md-7">
                    <span class="pull-right"> <b>Release Date :: </b> <span class="nice-green">@Model.CreatedOn.ToString("MMMM dd, yyyy")</span> </span>
                </div>
            </div>
            <div><b>Raiting :: </b>@Model.GetAverageRating()</div>
            <div><b>Author :: </b>@Model.AuthorName</div>
            <hr class="style-seven" />
            <h4 class="pl5p pr5p text-justify">Necessary items :: <span><small class="nice-green">@Html.ShowNecessaryItemsInIndexView(Model)</small></span></h4>
            <hr class="style-seven-reversed" />
            <div>
                <b>Comments :: </b>
                @Model.Comments.Count()
                @if (!(@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString() == "PartyGames" && @HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString() == "Details"))
                {
                    <small>@Html.ActionLink("See comments", "Details", "PartyGames", new { area = string.Empty, id = Model.Id }, new { @class = "pull-right nice-green" })</small>
                }
            </div>
        </div>
    </div>
</div>

@Html.Partial("_ManageButtonsPartial", Model)
<br />
